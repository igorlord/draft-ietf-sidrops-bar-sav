<?xml version="1.0" encoding="utf-8"?>
<?xml-model href="rfc7991bis.rnc"?>  <!-- Required for schema validation and schema-aware editing -->
<!-- <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?> -->
<!-- This third-party XSLT can be enabled for direct transformations in XML processors, including most browsers -->

<!DOCTYPE rfc [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">
<!ENTITY I-D.ietf-sidrops-rpkimaxlen SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-sidrops-rpkimaxlen.xml">

<!ENTITY I-D.ietf-sidrops-aspa-verification SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-sidrops-aspa-verification.xml">

<!ENTITY I-D.ietf-sidrops-aspa-profile SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-sidrops-aspa-profile.xml">

<!ENTITY I-D.ietf-grow-route-leak-detection-mitigation SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-grow-route-leak-detection-mitigation.xml">

]>
<!-- If further character entities are required then they should be added to the DOCTYPE above.
     Use of an external entity file is not recommended. -->

<rfc
  xmlns:xi="http://www.w3.org/2001/XInclude"
  category="bcp"
  docName="draft-sriram-sidrops-bar-sav-latest"

  ipr="trust200902"
  obsoletes=""
  updates="8704"
  submissionType="IETF"
  xml:lang="en"
  version="3">
<!-- [REPLACE]
       * docName with name of your draft
     [CHECK]
       * category should be one of std, bcp, info, exp, historic
       * ipr should be one of trust200902, noModificationTrust200902, noDerivativesTrust200902, pre5378Trust200902
       * updates can be an RFC number as NNNN
       * obsoletes can be an RFC number as NNNN
-->

  <front>
    <title abbrev="BAR-SAV">Source Address Validation Using BGP UPDATEs, ASPA, and ROA (BAR-SAV)</title>
<!--    <title abbrev="SAV using ASPA, ROA">Source Address Validation Using ASPA, ROA, and BGP UPDATE Messages</title> -->

    <seriesInfo name="Internet-Draft" value="draft-sriram-sidrops-sav-using-aspa-roa"/>

    <author fullname="Kotikalapudi Sriram" initials="K." surname="Sriram">
      <organization abbrev="USA NIST">USA National Institute of Standards and Technology</organization>
      <address>
        <postal>
          <street>100 Bureau Drive</street>
          <city>Gaithersburg</city>
          <region>MD</region>
          <code>20899</code>
          <country>United States of America</country>
        </postal>
        <email>ksriram@nist.gov</email>
      </address>
    </author>

    <author fullname="Igor Lubashev" initials="I." surname="Lubashev">
      <organization abbrev="Akamai">Akamai Technologies</organization>
      <address>
        <postal>
          <street> 145 Broadway </street>
          <city> Cambridge </city>
          <region>MA</region>
          <code> 02142 </code>
          <country>United States of America</country>
        </postal>
        <email>ilubashe@akamai.com</email>
      </address>
    </author>

    <author fullname="Doug Montgomery" initials="D." surname="Montgomery">
      <organization abbrev="USA NIST">USA National Institute of Standards and Technology</organization>
      <address>
        <postal>
          <street>100 Bureau Drive</street>
          <city>Gaithersburg</city>
          <region>MD</region>
          <code>20899</code>
          <country>United States of America</country>
        </postal>
        <email>dougm@nist.gov</email>
      </address>
    </author>

    <date year=""/>

    <!-- On draft subbmission:
         * If only the current year is specified, the current day and month will be used.
         * If the month and year are both specified and are the current ones, the current day will
           be used
         * If the year is not the current one, it is necessary to specify at least a month and day="1" will be used.
    -->

    <area>General</area>
    <workgroup>Internet Engineering Task Force (IETF)</workgroup>
    <!-- "Internet Engineering Task Force" is fine for individual submissions.  If this element is
          not present, the default is "Network Working Group", which is used by the RFC Editor as
          a nod to the history of the RFC Series. -->

    <keyword>Source Address Validation, SAV, unicast Reverse Path Forwarding, uRPF, BGP</keyword>
    <!-- [REPLACE/DELETE]. Multiple allowed.  Keywords are incorporated into HTML output files for
         use by search engines. -->

    <abstract>
      <t>
Designing an efficient source address validation (SAV) filter requires minimizing false positives (i.e., avoiding dropping legitimate traffic) while maintaining directionality (see RFC8704). This document advances the technology for SAV filter design through a method that makes use of BGP UPDATE messages, Autonomous System Provider Authorization (ASPA), and Route Origin Authorization (ROA). The proposed method's name is abbreviated as BAR-SAV. BAR-SAV can be used by network operators to derive more robust SAV filters and thus improve network resilience.
      </t>
    </abstract>

  </front>

  <middle>

    <section>
      <name>Introduction</name>
      <t>

Spoofed source addresses are often used in Denial of Service (DoS) and Distributed DoS (DDoS) attacks. Source address validation (SAV) filtering is used to drop packets with spoofed source addresses (see BCP&nbsp;84 <xref target="RFC3704"/> <xref target="RFC8704"/>). A detailed review of unicast Reverse Path Forwarding (uRPF) techniques for SAV is provided in <xref target="RFC8704"/>). Also, <xref target="RFC8704"/> describes enhanced feasible-path uRPF (EFP-uRPF) methods that aim to minimize false positives (i.e., avoid dropping legitimate traffic) while maintaining directionality (see definitions in <xref target="RFC3704"/>).

      </t>
      <t>
New technology for securing the Border Gateway Protocol (BGP) <xref target="RFC4271"/> using Resource Public Key Infrastructure (RPKI) <xref target="RFC6480"/> is seeing increasing adoption. Two of the currently existing or proposed types of signed objects in the RPKI can be leveraged for a more accurate SAV filter design as well.

These are the Route Origin Authorization (ROA) and the Autonomous System Provider Authorizations (ASPA) objects. A ROA is a cryptographically signed attestation by an IP address-resource holder listing their prefixes that are authorized to be originated in BGP by a specific autonomous system (AS) <xref target="RFC6482"/>. ROAs are currently used for Route Origin Validation (ROV) <xref target="RFC6811"/>.

An ASPA is a cryptographically signed attestation by an AS listing its transit provider AS numbers (ASNs) <xref target="I-D.ietf-sidrops-aspa-profile"/>. The ASPA data is designed to be used for a form of AS path validation that can detect and mitigate route leaks <xref target="I-D.ietf-sidrops-aspa-verification"/> <xref target="sriram1"/> <xref target="sriram2"/>. See <xref target="RFC7908"/> for the definition of route leaks.


      </t>
      <t>

This document advances the technology for SAV filter design using methods that make use of ASPA, ROA, and/or BGP UPDATE data. A method is presented in <xref target="method1"/> that makes use of only ASPA and ROA data to design the SAV filter. This method is for use in the future when the adoption of ROA and ASPA is considered to be ubiquitous. However, for use in the period before that, another method for SAV is presented in <xref target="method2"/> that makes complementary use of BGP UPDATE messages along with ASPA and ROA data. Accordingly, the latter method's name is abbreviated as BAR-SAV. It is hoped that just as the adoption of ROAs is growing at present <xref target="Monitor"/>, the adoption of ASPA will also gain momentum in the near future. The BAR-SAV method additionally incorporates a refined version of Algorithm A of the EFP-uRPF technique (Section 3.1 of <xref target="RFC8704"/>). BAR-SAV can be used by network operators to derive more robust SAV filters and thus improve network resilience.

      </t>
    <t>

The focus of this document is on the design of ingress SAV filters for an interface facing a customer or lateral peer AS. The same procedure applies in both cases (<xref target="observe"/>).
      </t>

      <t>
<!-- Based on the described procedures, this document provides BCP recommendations for network operators. -->
      </t>

      <t>
The reader is encouraged to be familiar with <xref target="RFC8704"/>, <xref target="RFC6811"/>, and <xref target="I-D.ietf-sidrops-aspa-profile"/>.

      </t>
      <t>


      </t>


      <section>
        <name>Requirements Language</name>
        <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL",
          "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT
          RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be
          interpreted as described in BCP 14 <xref target="RFC2119"/>
          <xref target="RFC8174"/> when, and only when, they appear in
          all capitals, as shown here.</t>
      </section>

      </section>

        <section anchor="observe">
        <name>Same Procedure Applies to Customers and Lateral Peers </name>

      <t>

The same procedure applies for the construction of a permissible ingress SAV filter for a customer or lateral peer interface. Customers and lateral peers should only transmit data packets with source addresses belonging to only the prefixes that are authorized to be used by the ASes in their respective customer cones  (CC). The CC includes the AS belonging to the customer or lateral peer.
      </t>

 </section>

        <section anchor="method1">
        <name>SAV Using ASPA and ROA (Procedure X)</name>
      <t>
The method/procedure (called Procedure X) described in this section is for future scenarios when ASPA and ROA adoption is ubiquitous. In that scenario, robust SAV filters can be generated from the RPKI information (ASPA and ROA data) alone. The procedure is applicable for ingress SAV filter design for customer and lateral peer interfaces. An ISP may use Procedure X on customer interfaces if it requires all its customers to register ROAs and ASPAs.
      </t>
      <t>

A description of Procedure X (one that makes use of only ASPA and ROA data):
         </t>

      <ul>
<li>Step A: Compute the set of ASNs in the Customer's or Lateral Peer's customer cone using ASPA data.</li>

<li>Step B: Compute from ROA data the set of unique prefixes authorized to be announced by the ASNs found in Step A. Keep only the unique prefixes. This set is the permissible prefix list for SAV for the interface in consideration.
</li>

</ul>

      <t>
A detailed description of Procedure X is as follows:
         </t>

      <ol>

<li> Let the Customer or Lateral Peer ASN be denoted as AS-k. </li>
<li> Let i = 1. Initialize: AS-set S(1) = {AS-k}. </li>
<li> Increment i to i+1. </li>
<li> Create AS-set S(i) of all ASNs whose ASPA data declares at least one ASN in AS-set S(i-1) as a Provider. </li>
<li>If AS-set S(i) is null, then set i_max = i - 1 and go to Step 6. Else, go to Step 3. </li>
<li>Form the union of the sets, S(i), i = 1, 2, ..., i_max, and name this union as AS-set A. </li>

<li>Select all ROAs in which the authorized origin ASN is equal to any ASN in AS-set A. Form the union of the sets of prefixes listed in the selected ROAs. Name this union set of prefixes as P-set. </li>

<li>Apply P-set as the list of permissible prefixes for SAV. </li>
</ol>
    </section>

        <section anchor="method2">
        <name>SAV using BGP UPDATE Messages, ASPA, and ROA (BAR-SAV)</name>

      <t>
SAV using BGP UPDATE Messages, ASPA, and ROA (BAR-SAV) is described in this section and is meant for the period when there is a partial deployment of ROAs and ASPAs. To compensate for incomplete RPKI information, BAR-SAV augments ASPA data with BGP UPDATE AS_PATH data for discovering CC ASes, and it augments ROA data with BGP UPDATE data for discovering all prefixes associated with ASes in the CC.  The details of this procedure are described below.
      </t>
      <t>

   BAR-SAV additionally incorporates a refined version of Algorithm A of
   EFP-uRPF (Section 3.1 of <xref target="RFC8704"/>).  Algorithm A in
   [RFC8704] picked only the originating ASes from AS_PATHs received on
   the customer or lateral peer interface in consideration
   and included them for SAV filter computation.  The variant of
   Algorithm A in <xref target="RFC8704"/> used here includes all ASes in the AS_PATHs
   for the SAV filter computation.  Unless there is a route leak <xref target="RFC7908"/>, each AS is a customer of the AS added next in AS_PATHs of BGP UPDATE messages
   received from a customer or lateral peer.  Further customer-provider AS relations within the CC are discovered by examining all unique ASes in the
   AS_PATHs in BGP UPDATEs received on all interfaces (from transit providers, customers, lateral peers, and IBGP peers). This is described in the step-by-step procedure later in this section.
</t>
<t>
Note that if a multi-homed AS is present in an above-mentioned AS_PATH and did not originate any prefix in the CC in consideration but originated a prefix into an overlapping neighboring CC, then the AS and prefix will still be detected and included in the design of the SAV filter. This improves the accuracy of the SAV filter in the BAR-SAV method in comparison to Algorithm A in <xref target="RFC8704"/>.
</t>

<!-- The method incorporates a slightly refined version of Algorithm A of EFP-uRPF (Section 3.1 of <xref target="RFC8704"/>). Algorithm A in <xref target="RFC8704"/> picked only the originating ASes from AS_PATHs received on the customer or a lateral peer interface and included them for SAV filter computation. The variant of Algorithm A in <xref target="RFC8704"/> used here includes all ASes in the AS_PATHs for the SAV filter computation. (Note: For AS_PATHs in UPDATEs received from a customer or later peer, each AS in the path is a customer of the AS added next. Here all the unique ASes in the AS_PATH are considered.) The prefixes originated by the afore-mentioned 'all ASes' will be included in the SAV list even if the routes are received via a lateral peer or provider. The improvement this offers is as follows. -->
      <t>
One should not compute a customer cone by separately processing ASPA data and AS_PATH data and then merging the two sets of ASes at the end. Doing so is likely to miss ASes from the customer cone. Instead, both ASPAs and AS_PATHs should be used to iteratively expand the discovered customer cone. When new ASes are discovered, both ASPA and AS_PATH data should be used to discover customers of those ASes. This process is repeated for newly discovered customer ASes until there are no new ASes to be found.
      </t>

      <t>
If a transit provider-to-customer relationship, e.g., from AS X to AS Y, is deduced from AS_PATH data but the ASPA data contradicts it (i.e., AS Y has ASPA and it does not include AS X as a transit provider), then the ASPA data prevails, and AS Y must not be considered to be a customer of X. Likewise, if a prefix for which ROA data exists is announced by an AS that is not authorized by ROA to announce the prefix, the ROA data prevalis, and the prefix is not included in the SAV filter list due to this announcement.  These design principles are reflected in Steps 5 and 10 of the procedure described below. (Please see discussion about route leaks and mis-origination in <xref target="Security"/>.)
      </t>


<!--
      <t>
As a measure of security, a clean-up of AS_PATH data can be performed before the BAR-SAV procedure is applied. If any AS in an AS_PATH has attested in its ASPA data that the next AS (AS added immediately after it) is not a transit provider, then all UPDATEs with that AS_PATH SHOULD be disregarded in the BAR-SAV procedure. This step can be skipped if ASPA-based route leak detection <xref target="I-D.ietf-sidrops-aspa-verification"/> is already deployed by the BGP speaker. Please see additional discussion about route leaks in <xref target="Security"/>.
      </t>
-->

<!--
Concerning finding all ASes in a CC by making complementary use of AS_PATHs and ASPAs, missing some ASes is possible if finding ASes in the CC is done separately (i.e., in an isolated manner) using ASPAs and AS_PATHs and then merging them into one list at the end. Instead, at each level of the provider-customer hierarchy, both ASPAs and AS_PATHs should be used in an integrated manner. In other words, if at level i in the hierarchy there is a set of ASes, say, AS-set(i), then the ASes at level i+1 are found by finding the customers of each AS in AS-set(i) using ASPAs as well as AS_PATHs and forming the union of all such customer ASes. This procedure is recursively applied until there are no more ASes to be found at the next level down. The union of sets of ASes at each level is the set of all ASes in the CC.
-->

<!--
         <t>
A description of the BAR-SAV procedure is as follows:
         </t>

      <ul>
<li>Step A: Compute the set of ASNs in the Customer's or Lateral Peer's CC using Steps A.1 through A.4: </li>

<li> Step A.1: Start with the Customer's or Peer's ASN and call it the Level 1 Set of ASNs. </li>

<li> Step A.2: Find Customer ASNs for all ASNs in the previous level's Set (Level 1 for the 1st iteration) using ASPAs. Call this set of Customer ASNs as Set A. </li>

<li> Step A.3: Consider unique AS_PATHs in Adj-RIBs-In [RFC4271] of all interfaces at the BGP speaker computing the SAV filter. From those, consider only the AS_PATHs in which an ASN from the previous level (Level 1 for the 1st iteration) is present. From those AS_PATHs, consider only the AS_PATH segments starting with the ASN in the previous level and ending at the origin AS. For each such AS_PATH segment, if any AS in the segment has attested in its ASPA data that the next AS (AS added immediately after it) is not a transit provider, then the AS_PATH segment is removed from consideration for BAR-SAV. Using the remaining AS_PATH segments, find Customer ASNs for all ASNs in the previous level's Set (Level 1 for the 1st iteration). </li>

<li> Step A.4: Form the union of Customer ASNs for all ASNs in the previous level's Set (Level 1 for the 1st iteration) using ASPAs. </li>

<li> Step A.3: Repeat the previous step until an empty Set of ASNs is computed. </li>
<li> Step A.4: The union of all thus computed Sets is the CC AS set. Call it AS-set A. </li>

        <li>Step B: Derive the permissible prefix list for SAV by two complementary methods (B.1 and B.2):</li>


<li>Step B.1: From ROA data, compute the set of prefixes that are authorized to be announced by each ASN in AS-set A. </li>

<li>Step B.2: Using the routes in Adj-RIBs-In of all interfaces, compute the set of unique prefixes that are originated from each ASN in AS-set A.</li>


<li>Step C: Construct the permissible prefix list for SAV by forming the union of the sets obtained in steps B.1 and B.2. </li>
</ul>

-->

      <t>
A detailed description of the BAR-SAV procedure is as follows:
         </t>

      <ol>

<li> Let the Customer or Lateral Peer ASN be denoted as AS-k. </li>
<li> Let i = 1. Initialize: AS-set Z(1) = {AS-k}. </li>
<li> Increment i to i+1. </li>
<li> Create AS-set A(i) of all ASNs whose ASPA data declares at least one ASN in AS-set Z(i-1) as a Provider. </li>
<li> Create AS-set B(i) of all "non-ASPA" customer ASNs each of which is a customer of at least one ASN in AS-set Z(i-1) according to unique AS_PATHs in Adj-RIBs-In [RFC4271] of all interfaces at the BGP speaker computing the SAV filter.  "Non-ASPA" ASN are ASNs that declare no provider in ASPA data. </li>
<li> Form the union of AS-sets A(i) and B(i) and call it AS-set C. From AS-set C, remove any ASNs that are present in Z(j), for j=1 to j=(i-1). Call the resulting set Z(i). </li>
<li> If AS-set Z(i) is null, then set i_max = i - 1 and go to Step 8. Else, go to Step 3. </li>
<li> Form the union of the AS-sets, Z(i), i = 1, 2, ..., i_max, and name this union as AS-set D. </li>
<li> Select all ROAs in which the authorized origin ASN is in AS-set D. Form the union of the sets of prefixes listed in the selected ROAs. Name this union set of prefixes as Prefix-set P1. </li>
<li> Using the routes in Adj-RIBs-In of all interfaces, create a list of all "non-ROA" prefixes originated by any ASN in AS-set D. "Non-ROA" prefixes are prefixes that are not covered by any prefix in ROA data. Name this set of prefixes as Prefix-set P2. </li>
<li> Form the union of Prefix-sets P1 and P2. Apply this union set as the list of permissible prefixes for SAV. </li>
</ol>
    </section>

      <section anchor="recomm" numbered="true">
        <name>Operational Recommendations</name>
<t>
Network operators SHOULD implement the BAR-SAV method (<xref target="method2"/>) for computing the permissible ingress prefix list for SAV on interfaces facing customers and lateral peers. BAR-SAV offers immediate incremental benefits to early adopters.
</t>
<t>
The operational recommendations provided in Section 3.2 of <xref target="RFC8704"/> are applicable and helpful for BAR-SAV (<xref target="method2"/>). Since Procedure X (<xref target="method1"/>) and the BAR-SAV procedure (<xref target="method2"/>) benefit from the registration of ROAs, network operators are RECOMMENDED to register ROAs and enable ROV in their ASes. When ASPA becomes available, network operators are also RECOMMENDED to register ASPAs at that time.
</t>
<t>
The registration of ROAs and ASPAs helps with the detection and inclusion of otherwise hidden prefixes in the permissible list for SAV. As mentioned earlier, prefixes hidden in other techniques often arise from the use of multi-homing in conjunction with limited propagation of prefixes in a given CC (for example, by attaching NO_EXPORT to all prefixes announced from a customer AS to a transit provider AS). In these situations, the registration of ASPAs helps improve the accuracy of SAV.

<!--It is also possible that these kinds of situations are very rare or operators can avoid them. It would be useful to request operators' inputs about that. In any case, if these situations do arise, then the registration of ASPAs would compensate and help with greater accuracy in the operation of SAV. -->

</t>
      <section anchor="cdn" numbered="true">
        <name>Considerations for the CDN and DSR Scenario</name>

<t>
Direct Server Return (DSR) is a common asymmetric routing scenario that is not supported by existing BCP-84 uRPF <xref target="RFC3704"/> and EFP-uRPF <xref target="RFC8704"/> SAV methods.  DSR is commonly used by Content Delivery Networks (CDNs) that wish to use anycast service addresses but deliver data from edge locations that do not announce anycast addresses.
</t>
<t>
For example, in <xref target="fig1"/>, the CDN announces an anycast prefix P3 (from AS3) from a well-connected location with CDN control infrastructure. When a User from prefix P1 (AS1) establishes a connection to the anycast address and requests an object, an Anycast Server at the CDN may determine that the best location to serve the object is an Edge Server in a location close to the User. The Edge Server is reachable only via prefix P2 (AS2). The Anycast Server can forward packets arriving from the User to the Edge Server (via IP-IP tunneling or similar means), but the bulk data transmission would need to happen directly from the Edge Server to the User with an anycast source address (a P3 address).
</t>

        <figure anchor="fig1" align="left" suppress-title="false" pn="figure-1">
          <name slugifiedName="DSR-illustration">Illustration of how the solution functions for the CDN/DSR scenario.</name>
          <artwork align="left" name="" type="" alt="">
                 +----------+   P3[AS5 AS3]  +------------+
                 |    AS4   |&lt;---------------|     AS5    |
                 +----------+      (P2P)     +------------+
                     /\   /\                        /\
                     /     \                         \
             P1[AS1]/       \P2[AS2]                  \P3[AS3]
              (C2P)/         \(C2P)                    \(C2P)
                  /           \                         \
           +----------+    +----------+           +----------+
           |  AS1 (P1)|    | AS2 (P2) |           | AS3 (P3) |
           +-----+----+    +----+-----+           +-----+----+
                 +              +                       +
               User       Edge Server (DSR)      Anycast Server

           Consider AS4 generating its SAV list
           CDN's ROAs: {P3 AS3}, {P3, AS2}, {P2, AS2}
           AS2 should not/does not announce P3
           With the SAV methods in this document,
             AS4 correctly includes P2 and P3 in its SAV list

</artwork>
        </figure>

<t>
Existing SAV methods of <xref target="RFC3704"/> and EFP-uRPF <xref target="RFC8704"/> would not allow AS4 to include P3 as a legitimate SA prefix on the interface to AS2. However, if the CDN (owner of prefix P3) registers a ROA object authorizing AS2 to originate P3, and AS4 uses an SAV procedure specified in this draft, then AS4 will use that ROA object to include P3 as a valid source prefix for the AS2 customer interface. The CDN may never want to announce a route to P3 from AS2, but the existence of this ROA would result in the construction of an SAV filter that would permit AS2 to send data packets with source addresses belonging to P3.
</t>

<!--An alternative solution for the CDN in the example above would be to publish an ASPA object naming AS2 as a Provider_ASN for AS3. As in the solution that uses ROA, the CDN would never want to advertise a route with AS_PATH [AS2 AS3], but the ASPA would serve as an authorization for AS2 to send packets with source addresses belonging to AS3's prefixes. -->

<t>
The CDN example above is just one DSR scenario. There are other cloud-based DSR scenarios that include low-latency gaming, mobile roaming, corporate networks of global enterprises, and others.
</t>

<t>
Recommendation: In a DSR scenario, a network operator MUST register ROAs that bind the edge server ASes with the anycast service prefix. This is in addition to registering a ROA authorizing the anycast server AS to announce the anycast prefix.
</t>


      </section>

      </section>

    <section title="Operations and Management Considerations" anchor="ops">
<t>
This section highlights some important operations and management considerations and was motivated in part to address the comments received from the SIDROPS working group members.
      </t>

    <section title="Applicability of ASPA and ROA" anchor="rpki-objects">
      <t>
A transit provider is a network that offers its customers outbound (customer to Internet) data traffic connectivity and/or further propagates BGP announcements from them. In the latter case, it also provides transport for inbound data traffic.
      In all cases, the customer AS MUST include the transit provider AS in its ASPA. Registering an ASPA thus prevents forged-origin hijacks for the AS and its prefixes and also helps BAR-SAV, while it does no discernible harm.

      </t>
      <t>
If a prefix is used for source addresses for hosts attached at an AS but not announced in BGP from that AS (e.g., the DSR scenario in <xref target="cdn"/>), a ROA MUST be registered binding the prefix and the AS. This ROA registration assists in preventing hijacking of the prefix and helps facilitate BAR-SAV. The risk of this ROA registration enabling a forged-origin prefix hijack for the prefix is minimal since the ASPA-based path verification <xref target="I-D.ietf-sidrops-aspa-verification"/> prevents forged-origin attacks. It may be noted that a similar usage of ROA is made in the context of DDoS mitigation (see Section 5.1 in <xref target="I-D.ietf-sidrops-rpkimaxlen"/>), where hypothetically the prefix may never need to be originated by the AS of the DDoS mitigation provider.

      </t>
    </section>
    <section title="BAR-SAV and Routing Policy" anchor="routing-policy">
      <t>
BAR-SAV identifies all ASes in a customer's (or lateral peer's) customer cone (CC), and then it discovers all prefixes that could plausibly be used as source addresses in data traffic originated from the ASes in the CC. If ASPA and ROA have been adopted by all ASes and prefix owners, respectively, in the CC of interest, then the list of plausible source address prefixes will be complete with no improper drops (i.e., traffic with legitimate source addresses is not dropped). Further, deploying BAR-SAV by all ASes within the CC ensures no improper admits (i.e., traffic with spoofed source addresses is not admitted). Note that routing policies of ASes in the CC may prevent some of the discovered prefixes from being used as source addresses on a given customer interface of interest, but this does not impact BAR-SAV's accuracy.
      </t>
    </section>

    <section title="Where to Deploy BAR-SAV" anchor="deploy">
      <t>
The discussion in Section 3.6.1 of <xref target="RFC8704"/> of the Forwarding Information Base (FIB) size estimates and the networks where SAV would be most effective are applicable to BAR-SAV as well. Smaller ISPs (and possibly some midsize and regional ISPs) are expected to implement the BAR-SAV method, since SAV in general is most effective closer to the edges of the Internet. For such networks, the conservatively estimated SAV filter list size is only a small fraction of the anticipated FIB memory size (see details in Section 3.6.1 of <xref target="RFC8704"/>).
      </t>
    </section>

    <section title="Automation is the Key" anchor="auto">
      <t>
SAV done manually, e.g., using ACLs, usually does not get much adoption because of operational costs, susceptibility to human errors, and tendency of SAV filters to get out of date due to the need for any changes by customers or peers to be coordinated with multiple parties (providers and peers). Automated uRPF technique, such as BAR-SAV, however, allow for easy, accurate, and cost effective deployments. The BAR-SAV method makes it possible to automate the construction of SAV filter lists with low probability of improper drop and improper admit of data traffic. As ASPA adoption picks up alongside the ongoing ROA adoption, BAR-SAV's accuracy of discovering all possible source addresses (prefixes) for the customer cone of interest improves even further in complex cases.
      </t>
    </section>

    <section title="Implementation Guidelines" anchor="implementation">
    <!--
    Sriram comment: The general guidance regarding RPKI repository outage, MFT/CRL expiry,
    staleness, etc. is that we should simply refer to the doucment where
    guidance is already provided (e.g., rfc 9286) about such things. We should not paraphrase as that
    can potentially distort things. If somethings need to be done differently in the ASPA context
    in comparison to what has been stated in another RFC related to, say, ROA (as an example),
    then we need to state that and state our reasons clearly.
    Also, I think we need not state that we'll use MFTs, etc. even if they are stale.
    The expiry time is 2 to 3 days out and the RPKI repository outage will rarely last more
    than a few to several hours.
    -->
      <t>
When a SAV filter is used to police data traffic, and an incomplete SAV filter list could cause legitimate traffic to be dropped, the use of robust implementation practices in SAV filter construction become paramount. Some of such recommended practices are discussed in this section.
      </t>

    <section title="Management of Local RPKI Repository Caches" anchor="local-caches">
      <t>
RPKI infrastructure does not guarantee continuous availability or consistency of RPKI repositories. Any system, such as BAR-SAV, that computes SAV filter lists using RPKI data MUST maintain local caches of RPKI signed objects, manifest files (MFTs), and certificate revocation lists (CRLs). Both MFTs and CRLs usually have a validity period of 2-3 days, so the caches SHOULD be refreshed at least daily. If an RPKI repository publication point is unavailable, or there is any other failure fetching its objects, the latest cached version of the objects associated with the repository MUST continue to be used, as described in <xref target="RFC9286"/>.
      </t>
      <t>
The validator MUST check expiration time of cryptographic objects when they are fetched from the repository before they are added to the local cache. Expiration time SHOULD NOT be checked when a cached object is used to construct a SAV filter later. This applies to RPKI signed objects as well as MFTs and CRLs.
      </t>
      <t>
If the local cache of some repository objects required for BAR-SAV computation is unavailable (for example, due to a filesystem failure) and cannot be fetched from the repository publication point, the SAV system SHOULD "fail open" and downgrade SAV function on a given interface to "loose uRPF" described in <xref target="RFC3704"/> and <xref target="RFC8704"/>. This downgrade is better than suspending SAV entirely since at least source addresses in unallocated and unused space are rejected.
<!-- IL (extra complexity here is not needed): Note that this applies only in case of the unavailability of objects required for BAR-SAV computation. Therefore, an implementation computing BAR-SAV filter SHOULD maintain and cache the most recent list of objects actually matched by BAR-SAV algorithm in computation of a SAV filter for each customer and peer interface. -->
      </t>
    </section>

    <section title="Management of Objects Temporarily Missing from RPKI Repositories" anchor="missing-objects">
      <t>
It is possible for an RPKI signed object to be temporarily missing from the repository as the owner is updating the object's information. Since it is better for a SAV filter to be too permissive rather than too restrictive (which causes improper drops), BAR-SAV implementations MAY continue to cache unexpired objects that are no longer listed in MFTs after a successful fetch operation. Such retained objects MUST still be validated against CRLs. An implementation MAY chose to use such cached objects only for SAV list construction and not for routing authorization. If an implementation chooses to keep such cached objects, it MUST re-validate their expiration time after each successful fetch operation.
      </t>
    </section>

    </section>

    </section>

    <section anchor="IANA">
      <name>IANA Considerations</name>
      <t>This document includes no request to IANA.</t>
    </section>

    <section anchor="Security">
      <name>Security Considerations</name>
      <t>The security considerations described in <xref target="RFC8704"/>, <xref target="RFC6811"/>, and <xref target="I-D.ietf-sidrops-aspa-profile"/> also apply to this document.   </t>

<t>
The security and robustness of BAR-SAV are strengthened by supporting mechanisms for detecting and dropping routes that are misoriginations or leaks. It is advised that the BGP UPDATEs received at BGP speakers are vetted using ROV (using ROAs and/or trusted IRR route objects) and prefix filtering (see <xref target="RFC6811"/> <xref target="RFC7454"/> <xref target="NIST-800-189"/>). It is also advised that one or more of the available methods to prevent, detect, and mitigate route leaks are also deployed (e.g., <xref target="RFC9234"/> <xref target="I-D.ietf-grow-route-leak-detection-mitigation"/> <xref target="I-D.ietf-sidrops-aspa-verification"/> <xref target="sriram1"/> <xref target="sriram2"/>).
</t>

    </section>
  </middle>

  <back>
    <references>
      <name>References</name>
      <references>
        <name>Normative References</name>
&I-D.ietf-sidrops-aspa-profile;

        <xi:include href="https://www.rfc-editor.org/refs/bibxml/reference.RFC.2119.xml"/>
        <xi:include href="https://www.rfc-editor.org/refs/bibxml/reference.RFC.8174.xml"/>
        <xi:include href="https://www.rfc-editor.org/refs/bibxml/reference.RFC.4271.xml"/>
        <xi:include href="https://www.rfc-editor.org/refs/bibxml/reference.RFC.3704.xml"/>
        <xi:include href="https://www.rfc-editor.org/refs/bibxml/reference.RFC.8704.xml"/>
        <xi:include href="https://www.rfc-editor.org/refs/bibxml/reference.RFC.9286.xml"/>

      </references>

      <references>
        <name>Informative References</name>

&I-D.ietf-sidrops-aspa-verification;
&I-D.ietf-sidrops-rpkimaxlen;
&I-D.ietf-grow-route-leak-detection-mitigation;

        <reference anchor="sriram1" target="https://datatracker.ietf.org/meeting/110/materials/slides-110-sidrops-sriram-aspa-alg-accuracy-01">
            <front>
                <title>On the Accuracy of Algorithms for ASPA Based Route Leak Detection</title>
                <author initials="K." surname="Sriram"><organization /></author>
                <author initials="J." surname="Heitz"><organization /></author>
                <date year="" />
            </front>
            <seriesInfo name="IETF SIDROPS Meeting," value="Proceedings of the IETF 110, March 2021" />
        </reference>

        <reference anchor="sriram2" target="https://datatracker.ietf.org/meeting/113/materials/slides-113-sidrops-aspa-verification-procedures-01">
            <front>
                <title>ASPA Verification Procedures: Enhancements and RS Considerations</title>
                <author initials="K." surname="Sriram"><organization /></author>
                <date year="" />
            </front>
            <seriesInfo name="IETF SIDROPS Meeting," value="Proceedings of the IETF 113, March 2022" />
        </reference>

        <reference anchor="Monitor" target="https://rpki-monitor.antd.nist.gov/">
            <front>
                <title>NIST RPKI Monitor</title>
                <author initials="" surname=""><organization /></author>
                <date year="" />

            </front>
            <seriesInfo name="National Institute of Standards and Technology," value="accessed June 2022" />
        </reference>


        <reference anchor="NIST-800-189" target="https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-189.pdf">
            <front>
                <title>Resilient Interdomain Traffic Exchange: BGP Security and DDoS Mitigation</title>
                <author initials="K." surname="Sriram"><organization /></author>
                <author initials="D." surname="Montgomery"><organization /></author>
                <date year="" />
            </front>
            <seriesInfo name="NIST Special Publication," value="NIST SP 800-189, December 2019" />
        </reference>

        <xi:include href="https://www.rfc-editor.org/refs/bibxml/reference.RFC.6480.xml"/>

        <xi:include href="https://www.rfc-editor.org/refs/bibxml/reference.RFC.6482.xml"/>

        <xi:include href="https://www.rfc-editor.org/refs/bibxml/reference.RFC.6811.xml"/>

        <xi:include href="https://www.rfc-editor.org/refs/bibxml/reference.RFC.7454.xml"/>

        <xi:include href="https://www.rfc-editor.org/refs/bibxml/reference.RFC.7908.xml"/>

        <xi:include href="https://www.rfc-editor.org/refs/bibxml/reference.RFC.9234.xml"/>

      </references>
    </references>


    <section anchor="Acknowledgements" numbered="false">
      <name>Acknowledgements</name>
      <t>The authors would like to thank Oliver Borchert for comments and discussion. </t>
    </section>
<!--
    <section anchor="Contributors" numbered="false">
            <name>Contributors</name>
      <t>Thanks to all of the contributors. </t>
          </section>
-->

 </back>
</rfc>
